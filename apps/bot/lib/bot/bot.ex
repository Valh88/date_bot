defmodule Bot.Bot do
  @bot :date_bot
  use ExGram.Bot, name: @bot, setup_commands: true
  require Logger
  alias ExGram.Cnt

  command("start", description: "üëã –°—Ç–∞—Ä—Ç–æ–≤–∞—è")
  command("profile", description: "üë§ –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
  command("dating", description: "üë©‚Äçüë¶‚Äçüë¶ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
  command("help", description: "üëâ –ü–æ–º–æ—â—å")

  middleware(Middleware.UserProfileContext)

  def handle({:command, :start, _msg}, %Cnt{extra: %{user: user}} = context) do
    if user.dating_profile do
      answer(context, "profile")
    else
      answer(context, "üëã –ü—Ä–∏–≤–µ—Ç, —è —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–∏—Å–∫–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è —Ç–µ–±—è! –£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã, –Ω–∞–∂–º–∏ /profile —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ–µ!")
    end
  end

  def handle({:command, :profile, _msg}, %Cnt{extra: %{user: user}} = context) do
    if user.dating_profile do
      answer(context, "profile")
    else
      answer(context, "üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: –í–∞—Å—è")
    end
  end

  def handle({:text, text, _msg}, %Cnt{extra: %{user: _user}} = context) do
    IO.inspect(text)
    answer(context, text)
  end

  def handle(arg0, _arg1) do
    IO.inspect(arg0)
    # IO.inspect(arg1)
  end
end
