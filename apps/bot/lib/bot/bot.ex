defmodule Bot.Bot do
  @bot :date_bot
  use ExGram.Bot, name: @bot, setup_commands: true
  require Logger
  alias ExGram.Cnt
  alias Bot.DatingProfileFsm

  command("start", description: "üëã –°—Ç–∞—Ä—Ç–æ–≤–∞—è")
  command("profile", description: "üë§ –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
  command("dating", description: "üë©‚Äçüë¶‚Äçüë¶ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
  command("help", description: "üëâ –ü–æ–º–æ—â—å")

  middleware(Middleware.UserProfileContext)

  def handle({:command, :start, _msg}, %Cnt{extra: %{user: user}} = context) do
    if user.dating_profile do
      answer(context, "profile")
    else
      answer(context, "üëã –ü—Ä–∏–≤–µ—Ç, —è —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–∏—Å–∫–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è —Ç–µ–±—è! –£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã, –Ω–∞–∂–º–∏ /profile —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ–µ!")
    end
  end

  def handle({:command, :profile, _msg}, %Cnt{extra: %{user: user}} = context) do
    if user.dating_profile do
      answer(context, "profile")
    else
      answer(context, "üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: –í–∞—Å—è")
    end
  end

  def handle({:text, text, _msg}, %Cnt{extra: %{user: user}} = context) do
    IO.inspect(text)
    case DatingProfileFsm.get_current_context(user.id) do
      {:current, :wait_name} -> save_name(context, user.id, text)
      {:current, :wait_age} -> save_age(context, user.id, text)
      {:current, :wait_gender} -> save_gender(context, user.id, text)
      {:current, :wait_description} -> save_description(context, user.id, text)
      {:current, :save_photos} -> save_photos(context, user.id, text)
      {:current, :save_profile} -> Logger.debug("To do")
      _ -> answer(context, "üë§ –ü—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    end
  end

  defp save_name(context, user_id, name) do
    IO.inspect(DatingProfileFsm.get_current_context(user_id))
    state = DatingProfileFsm.name(user_id, name)
    Logger.debug("state: #{inspect(state)}")
    answer(context, "üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç")
  end


  defp save_age(context, user_id, age) do
    IO.inspect(DatingProfileFsm.get_current_context(user_id))
    DatingProfileFsm.age(user_id, age)
    answer(context, "üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–æ–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä: male/female")
  end

  defp save_gender(context, user_id, gender) do
    DatingProfileFsm.gender(user_id, gender)
    answer(context, "üë§ –í–≤–µ–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ")
  end

  defp save_description(context, user_id, description) do
    DatingProfileFsm.description(user_id, description)
    answer(context, "üë§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ")
  end

  defp save_photos(context, user_id, photos) do
    DatingProfileFsm.photos(user_id, photos)
    answer(context, "üë§ –∞–Ω–∫–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
  end

  def handle(arg0, _arg1) do
    IO.inspect(arg0)
    # IO.inspect(arg1)
  end
end
